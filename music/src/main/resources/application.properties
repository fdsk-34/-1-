spring.application.name=music

# MySQL 데이터소스 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/music?useSSL=false
spring.datasource.username=root
spring.datasource.password=1234

# JPA 설정
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show_sql=true

# JPA (Hibernate) 설정
# spring.jpa.hibernate.ddl-auto: 테이블 자동 생성 및 갱신 옵션 설정.
# 추천 옵션: update (기존 테이블은 유지하며 변경된 컬럼 자동 반영)
# 주의 옵션: none 또는 validate (자동 변경 없음)

# Spring Security OAuth2 클라이언트 등록 (Google)
spring.security.oauth2.client.registration.google.client-id=xxxx
spring.security.oauth2.client.registration.google.client-secret=yyyy
spring.security.oauth2.client.registration.google.scope=openid,email,profile
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# Spring Security OAuth2 프로바이더 설정 (Google)
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# JWT 설정
jwt.secret=b2F1dGhzZXJ2ZXJzZWNyZXRhY2Nlc3N0b2tlbm9hdXRoc2VydmVyc2VjcmV0YWNjZXNzdG9rZW5vYXV0aHNlcnZlcnNlY3JldGFjY2Vzc3Rva2Vu
jwt.expiration=3000

# OAuth (Google)
oauth.google.client-id=xxxx
oauth.google.client-secret=yyyy
oauth.google.redirect-uri=http://localhost:3000/oauth/google/redirect